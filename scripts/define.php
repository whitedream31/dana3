<?php//namespace dana\core;register_shutdown_function('fatal_handler');function fatal_handler() {  $errfile = "unknown file";  $errstr  = "shutdown";  $errno   = E_CORE_ERROR;  $errline = 0;  $error = error_get_last();  if ($error !== NULL) {    $errno   = $error["type"];    $errfile = $error["file"];    $errline = $error["line"];    $errstr  = $error["message"];    echo "<p class='error'><strong>{$errstr}</strong> - {$errfile} at line {$errline}</p>\n";    exit;  }}function TryAutoLoad($file, $name) {  $ret = file_exists($file);  if ($ret) {echo "<p>AUTOLOADING: {$name}: {$file}</p>\n";    include $file;  }  return $ret;}function __autoload($name) {  $list = explode('\\', $name);  $class = end($list);//  echo "<p>autoloading: '{$name}' - {$class}</p>\n";  if (!TryAutoLoad("class.{$class}.php", $name)) {    if (!TryAutoLoad("worker.{$class}.php", $name)) {      if (!TryAutoLoad("class.table.{$class}.php", $name)) {        if (!TryAutoLoad("../../scripts/class.table.{$class}.php", $name)) {          if (!TryAutoLoad("scripts/class.table.{$class}.php", $name)) {            echo              "<h2 class='error'>Class '{$class}' not found</h2>\n";//            "<p>Current Directory: " . getcwd() . "</p>\n";            throw new \Exception("Unable to load {$name}:'{$class}'.");          }        }      }    }  }}require_once "consts.php";// basic data types for fields//define('DT_STRING', 's');//define('DT_TEXT', 't');//define('DT_INTEGER', 'i');//define('DT_FLOAT', 'f');//define('DT_DATE', 'd');//define('DT_DATETIME', 'dt');//define('DT_BOOLEAN', 'b');//define('DT_FILEIMG', 'fi');//define('DT_FILEWEB', 'fw');//define('DT_FILEANY', 'fa');//define('DT_ID', 'id');//define('DT_FK', 'fk');//define('DT_TAG', 'tag');//define('DT_STATUS', 'st');// subtypes//define('DT_REF', 'ref');//define('DT_DESCRIPTION', 'desc');//// basic field types for controls//define('FLDTYPE_NONE', 'x');//define('FLDTYPE_HIDDEN', 'h');//define('FLDTYPE_EDITBOX', 'eb');//define('FLDTYPE_TEXTAREA', 'ta');//define('FLDTYPE_CHECKBOX', 'cb');//define('FLDTYPE_FILE', 'f');//define('FLDTYPE_PASSWORD', 'p');//// multiple value types//define('FLDTYPE_RADIO', 'rb');//define('FLDTYPE_SELECT', 's');//// special types//define('FLDTYPE_DATE', 'd');//define('FLDTYPE_TIME', 't');//define('FLDTYPE_FILEWEBSITE', 'fw');//define('FLDTYPE_FILEWEBIMAGES', 'fwi');//define('FLDTYPE_EMAIL', 'e');//define('FLDTYPE_URL', 'u');//define('FLDTYPE_TELEPHONE', 'tel');//define('FLDTYPE_BUTTON', 'btn');//define('FLDTYPE_CUSTOM', 'ctm');//define('FLDTYPE_STATIC', 'st');//define('FLDTYPE_DATAGRID', 'dg');//define('FLDTYPE_DATALIST', 'dl');//define('FLDTYPE_STATUSGRID', 'sg');//define('STATUS_OK', 'ok');//define('STATUS_WARNING', 'warn');//define('STATUS_ERROR', 'err');//define('STATUS_ACTIVE', 'A');//define('STATUS_DELETED', 'D');//define('STATUS_WAITING', 'W'); // newsletters - invited but not accepted yet//define('STATUS_CANCELLED', 'C'); // newsletters - invited but not accepted after 30 days//define('STATUS_UNSUBSCRIBED', 'U'); // newsletters - no longer subscribed//define('STATUS_NEW', 'N'); // new item - guestbook entries//define('STATUS_HIDDEN', 'H'); // hide item - guestbook entries// run mode types ($act)//define('ACT_LIST', 'l');//define('ACT_NEW', 'n');//define('ACT_EDIT', 'e');//define('ACT_REMOVE', 'r');//define('ACT_CONFIRM', 'cf'); // booking//define('ACT_CANCEL', 'cn');  // booking//define('ACT_VISTOGGLE', 'v');//define('ACT_MOVEDOWN', 'd');//define('ACT_MOVEUP', 'u');//define('ACT_NLSEND', 'ns');//define('ACT_ADDITEM', 'a');//define('ACT_IGNOREFIRSTROW', 'ifr');// page types//define('PAGETYPE_GENERAL', 'gen');//define('PAGETYPE_CONTACT', 'con');////define('PAGETYPE_ABOUTUS', 'abt');//define('PAGETYPE_PRODUCT', 'prd');//define('PAGETYPE_GALLERY', 'gal');//define('PAGETYPE_ARTICLE', 'art');//define('PAGETYPE_GUESTBOOK', 'gbk');//define('PAGETYPE_SOCIALNETWORK', 'soc');//define('PAGETYPE_BOOKING', 'bk');//define('PAGETYPE_CALENDAR', 'cal');//define('PAGETYPE_NEWSLETTER', 'nl');////define('PAGETYPE_SURVEY', 'svy');////define('PAGETYPE_MEDIA', 'md');//define('ACCSTATUS_UNCONFIRMED', 'uncon');//define('ACCSTATUS_OFFLINE', 'off');//define('ACCSTATUS_UNKNOWN', 'unknown');//define('ACCSTATUS_NOTEXISTS', 'noacc');//define('ACCSTATUS_EXPIRED', 'exp');//define('ACCSTATUS_PUBLISHED', 'pub');//define('ACCSTATUS_PENDING', 'pen');//define('ACCSTATUS_MODIFIED', 'mod');//define('ACCSTATUS_DELETED', 'del');//define('THEMESUITABAILTYTYPE_SIMPLE', 1);//define('THEMESUITABAILTYTYPE_REGULAR', 2);//define('THEMESUITABAILTYTYPE_ADVANCED', 3);// date formats//define('DF_SHORTDATE', 'sd');//define('DF_SHORTDATETIME', 'sdt');//define('DF_LONGDATETIME', 'ldt');//define('DF_MEDIUMDATETIME', 'mdt');//define('DF_MEDIUMDATE', 'md');//define('IDNAME_CHANGEORGDETAILS', 'accchgorgdet');//define('IDNAME_CHANGECONDETAILS', 'accchgcondet');//define('IDNAME_CHANGELOGINPWD', 'accchglogin');//define('IDNAME_MANAGEAREASCOVERED', 'accmanareacovered');//define('IDNAME_MANAGEHOURSAVAILABLE', 'accmanhoursavail');//define('IDNAME_MANAGEADDRESSES', 'accmanaddress');//define('IDNAME_MANAGEPAGES', 'pgman');//define('IDNAME_SITEPREVIEW', 'sitepreview');//define('IDNAME_CHANGETHEME', 'sitechgtheme');//define('IDNAME_SITEUPDATE', 'siteupdate');//define('IDNAME_MANAGERATINGS', 'sitemanratings');//define('IDNAME_MANAGEGALLERIES', 'resmangalleries');//define('IDNAME_MANAGEGALLERYIMAGES', 'resmangalleryimages');//define('IDNAME_MANAGEFILES', 'resmanfiles');//define('IDNAME_MANAGEARTICLES', 'resmanarticles');//define('IDNAME_MANAGENEWSLETTERS', 'resmannewsletters');//define('IDNAME_MANAGENEWSLETTERITEMS', 'resmannewsletteritems');//define('IDNAME_MANAGENEWSLETTERSUBSCRIBERS', 'resmannewslettersubscribers');//define('IDNAME_MANAGEBOOKINGS', 'resmanbookings');//define('IDNAME_MANAGEBOOKINGSETTINGS', 'resmanbookingsettings');//define('IDNAME_MANAGEGUESTBOOKS', 'resmanguestbooks');//define('IDNAME_MANAGEGUESTBOOKSENTRIES', 'resmanguestbookentry');//define('IDNAME_MANAGEPRIVATEAREAS', 'resmanprivateareas');//define('IDNAME_MANAGEPRIVATEAREAMEMBERS', 'resmanprivateareamembers');//define('IDNAME_MANAGEPRIVATEAREAPAGES', 'resmanprivateareapages');//define('IDNAME_MANAGECALENDARDATES', 'resmancalendardates');//// content type for website manager class//define('CTWM_MAINCONTENT', 'mc');//define('CTWM_INITIALCONTENT', 'ic');//define('CTWM_ARTICLES', 'art');//define('CTWM_GUESTBOOK', 'gb');//define('CTWM_NEWSLETTERS', 'nl');//define('CTWM_SOCIALNETWORK', 'sn');//define('CTWM_CALENDAR', 'cal');//define('CTWM_BOOKING', 'bk');//define('CTWM_PRIVATEAREA', 'pa');//define('CTWM_DOWNLOADABLEFILES', 'df');// session ids//define('SESS_IDGROUP', 'idgroup'); // section to show in control page//define('SESS_GUEST', 'guest'); // guest id when using the guestbooks/*function ReadGetValue($key, $default = false) {  return isset($_GET[$key]) ? $_GET[$key] : $default;}function ReadPostValue($key, $default = false) {  return isset($_POST[$key]) ? $_POST[$key] : $default;}function ReadSetting($key, $default = 0) {  return isset($_GET[$key]) ? $_GET[$key] : (isset($_POST[$key]) ? $_POST[$key] : $default);}function DebugShowVar($var) {  var_dump($var);}/*function ShowButton($name, $value, $title, $handler, $newwindow = false) {  if ($newwindow) {    $event = "javascript:window.open('{$handler}', '_blank');";  } else {    $event = "javascript:window.open('{$handler}', '_self');";  }  return "<input class='actionbutton' type='button' name='{$name}' value='{$value}' title='{$title}' onclick=\"{$event}\" />";}*/function CountToString($value, $postfix = 'item', $none = '<em>none</em>') {  $newvalue = (is_array($value)) ? count($value) : $value;  if ($newvalue == 0) {    $ret = $none;  } elseif ($newvalue == 1) {    $ret = trim('1 ' . $postfix);  } elseif ($postfix) {    $ret = trim("{$newvalue} {$postfix}s");  } else {    $ret = $newvalue;  }  return $ret;}function IsBlank($value) {  $str = ArrayToString($value);  return (empty($value) || strtolower($str) == 'na');}function ArrayToString($value) {  if (is_array($value)) {    $ret = implode("\n", $value);  } else {    $ret = $value;  }  return $ret;}function StringToArray($value) {  if (is_array($value)) {    $ret = $value;  } else {    $ret = explode("\n", $value);  }  return $ret;}function RemoveEmptyElements($list) {  foreach($list as $key => $line) {    if (empty($line)) {      unset($list[$key]);    }  }  return $list;}function MakeArray($value1, $value2 = false) {  $ret = array();  if (!empty($value1)) {    if (is_array($value1)) {      $ret = array_merge($ret, $value1);    } else {      $ret[] = $value1;    }  }  if ($value2) {    $ret = array_merge($ret, MakeArray($value2));  }  return $ret;}function GetGet($name, $default = false) {  return (isset($_GET[$name])) ? $_GET[$name] : $default;}function GetPost($name, $default = false) {  return (isset($_POST[$name])) ? $_POST[$name] : $default;}function IfBlank($value, $default) {  return (IsBlank($value)) ? $default : $value;}